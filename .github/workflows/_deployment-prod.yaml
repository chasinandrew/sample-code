on:
  workflow_call:
    inputs:
      environment:
        type: string
        required: true
        description: Name of the target deployment environment. Acceptable values are 'dev', 'qa', or 'prod'.
      ref:  
        type: string
        required: true
        description: The branch, tag or SHA to checkout.
      enable:
        type: boolean
        required: false
        default: true
        description: Whether or not to perform the actual deployment. The default value is true, or perform the deployment.
      gcp_project_id:
        type: string
        required: true
        description: The Google Cloud project ID.
      artifact_registry_repo:
        type: string
        required: true
        description: The artifact registry repository name.
      region:
        type: string
        required: true
        description: The artifact registry region name.
      service_name:
        type: string
        required: true
        description: The container service name.
      code_directory: 
        type: string
        required: true
        description: The directory where the source code lives. 
      cloud_run_sa: 
        type: string
        required: false
        description: The directory where the source code lives. 
      language: 
        type: string
        required: true
        description: Language the code is written in. 
      new_revision_percentage: 
        type: string
        required: false
        default: 10
        description: New Cloud Run revision traffic percentage
      existing_revision_percentage: 
        type: string
        required: false
        default: 90
        description: Existing Cloud Run revision traffic percentage
      existing_revision: 
        type: string
        required: false
        description: Existing Cloud Run revision name

jobs:
  image-build-push: 
    if: contains(fromJSON('"main"]'), github.ref_name) && ${{ inputs.environment }} == "prod"
    name: "Image Build & Push"
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Google Authentication
        id: auth
        uses: 'google-github-actions/auth@v0'
        with:
          token_format: 'access_token'
          workload_identity_provider: '${{ secrets.WIF_PROVIDER }}' # e.g. - projects/123456789/locations/global/workloadIdentityPools/my-pool/providers/my-provider
          service_account: '${{ secrets.WIF_SERVICE_ACCOUNT }}'     # e.g. - my-service-account@my-project.iam.gserviceaccount.com

      # Authenticate Docker to Google Cloud Artifact Registry
      - name: Docker Authentication
        id: docker-auth
        uses: 'docker/login-action@v1'
        with:
          username: 'oauth2accesstoken'
          password: '${{ steps.auth.outputs.access_token }}'
          registry: '${{ inputs.region }}-docker.pkg.dev'

      - name: Build and Tag
        id: build-image
        uses: docker/build-push-action@v3
        with:
          context: ${{ inputs.code_directory }}
          push: true 
          tags: |
            ${{ inputs.region }}-docker.pkg.dev/${{ inputs.gcp_project_id }}/${{ inputs.artifact_registry_repo }}/${{ inputs.service_name }}:${{ inputs.ref }}
            ${{ inputs.region }}-docker.pkg.dev/${{ inputs.gcp_project_id }}/${{ inputs.artifact_registry_repo }}/${{ inputs.service_name }}:latest

      - name: Docker Push
        shell: bash
        run: |-
          docker push "${{ inputs.region }}-docker.pkg.dev/${{ inputs.gcp_project_id }}/${{ inputs.artifact_registry_repo }}/${{ inputs.service_name }}:${{ inputs.ref }}"
          docker push "${{ inputs.region }}-docker.pkg.dev/${{ inputs.gcp_project_id }}/${{ inputs.artifact_registry_repo }}/${{ inputs.service_name }}:latest"

  deploy-prod: 
    if: contains(fromJSON('["main"]'), github.ref_name) && ${{ inputs.environment }} == "prod"
    name: "Cloud Run Deployment"
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    needs: [image-build-push]
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Google Authentication
        id: auth
        uses: 'google-github-actions/auth@v0'
        with:
          token_format: 'access_token'
          workload_identity_provider: '${{ secrets.WIF_PROVIDER }}' # e.g. - projects/123456789/locations/global/workloadIdentityPools/my-pool/providers/my-provider
          service_account: '${{ secrets.WIF_SERVICE_ACCOUNT }}'     # e.g. - my-service-account@my-project.iam.gserviceaccount.com
   
      - name: Create Service ${{ inputs.environment }} Declaration   
        run: |-
          export CONTAINER_IMAGE="${{ inputs.region }}-docker.pkg.dev/${{ inputs.gcp_project_id }}/${{ inputs.artifact_registry_repo }}/${{ inputs.service_name }}:${{ inputs.ref }}"
          export SERVICE_NAME="${{ inputs.service_name }}"
          export PROJECT_ID="${{ inputs.gcp_project_id }}"
          export REVISION_TAG="${{ inputs.ref }}"
          export CLOUD_RUN_SA="${{ inputs.cloud_run_sa }}"
          export NEW_REVISION_PERCENTAGE=${{ inputs.new_revision_percentage }}
          export EXISTING_REVISION=${{ inputs.existing_revision }}
          export EXISTING_REVISION_PERCENTAGE=${{ inputs.existing_revision_percentage }}
          envsubst < ./service-yaml/container-${{ inputs.environment }}.yaml > container-${{ inputs.environment }}.yaml
        
      - name: Deploy to ${{ inputs.environment }} Cloud Run
        id: deploy-prod
        uses: google-github-actions/deploy-cloudrun@v0
        with:
          project_id: ${{ inputs.gcp_project_id }}
          service: ${{ inputs.service_name }}
          region: ${{ inputs.region }}
          metadata: container-${{ inputs.environment }}.yaml 